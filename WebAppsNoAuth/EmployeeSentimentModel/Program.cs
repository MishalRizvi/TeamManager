
// This file was auto-generated by ML.NET Model Builder. 

using System;

namespace EmployeeSentimentModel.ConsoleApp
{
    class Program
    {
        static void Main(string[] args)
        {
            // Create single instance of sample data from first line of dataset for model input
            EmployeeSentimentModel.ModelInput sampleData = new EmployeeSentimentModel.ModelInput()
            {
                Id = 1F,
                Person_name = @"John Doe",
                Feedback = @"John has not progressed in his position. He is continuously late, leaves early, and takes many breaks throughout the day. He calls out at least every other week and it's always on Fridays. His performance has significantly declined. My suggestion is he is not suitable for this position.",
                Adjusted = @"FALSE",
                Reviewed = @"TRUE",
                Label = @"0",
                Feedback_len = @"287",
                Num_of_sent = @"5",
                Performance_class = @"0",
                Potential_class = 0F,
            };

            Console.WriteLine("Using model to make single prediction -- Comparing actual Nine_box_category with predicted Nine_box_category from sample data...\n\n");


            Console.WriteLine($"Id: {1F}");
            Console.WriteLine($"Person_name: {@"John Doe"}");
            Console.WriteLine($"Nine_box_category: {@"Category 1: 'Risk' (Low performance, Low potential)"}");
            Console.WriteLine($"Feedback: {@"John has not progressed in his position. He is continuously late, leaves early, and takes many breaks throughout the day. He calls out at least every other week and it's always on Fridays. His performance has significantly declined. My suggestion is he is not suitable for this position."}");
            Console.WriteLine($"Adjusted: {@"FALSE"}");
            Console.WriteLine($"Reviewed: {@"TRUE"}");
            Console.WriteLine($"Label: {@"0"}");
            Console.WriteLine($"Feedback_len: {@"287"}");
            Console.WriteLine($"Num_of_sent: {@"5"}");
            Console.WriteLine($"Performance_class: {@"0"}");
            Console.WriteLine($"Potential_class: {0F}");


            var sortedScoresWithLabel = EmployeeSentimentModel.PredictAllLabels(sampleData);
            Console.WriteLine($"{"Class",-40}{"Score",-20}");
            Console.WriteLine($"{"-----",-40}{"-----",-20}");

            foreach (var score in sortedScoresWithLabel)
            {
                Console.WriteLine($"{score.Key,-40}{score.Value,-20}");
            }
            Console.WriteLine("=============== End of process, hit any key to finish ===============");
            Console.ReadKey();
        }
    }
}
