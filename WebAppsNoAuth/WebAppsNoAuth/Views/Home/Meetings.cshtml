<div>
    <h2 class="appTitle indexHeader">Meetings</h2>
    <br />
    <div>
        <table class="table table-hover styled-table-calendar">
            <thead>
                <tr>
                    <th><button class="btn btn-primary appButton" data-toggle="modal" data-target="#meetingModal" onclick="clearTextBox()"><i class="fa fa-plus"></i> Add new meeting </button></th>
                </tr>
                <tr style="color:maroon">
                    <th>Item</th>
                    <th>Host</th>
                    <th>Description</th>
                    <th>Priority</th>
                    <th>Date</th>
                    <th>Time</th>
                    <th>Attendees</th>
                    <th></th>
                </tr>
            </thead>
            <tbody class="tbody">
            </tbody>
        </table>
    </div>
</div>
<div class="modal fade" id="meetingModal" tabindex="-1" role="dialog" aria-labelledby="meetingModalLabel" aria-hidden="true" style="display:none">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <label class="form-label appLabel" style="font-size:x-large">New Meeting</label>
                <button type="button" class="close appCloseButton" data-dismiss="modal" onclick="closeMeetingModal()">x</button>
            </div>
            <div class="modal-body">
                <form method="get">
                    <div class="form-outline mb-4">
                        <label class="form-label appLabel" for="meetingTitle">Title: </label>
                        <input type="text" id="meetingTitle" class="form-control form-control-lg" required />
                    </div>
                    <div class="form-outline mb-4">
                        <label class="form-label appLabel" for="meetingDescription">Description: </label>
                        <input type="text" id="meetingDescription" class="form-control form-control-lg" required />
                    </div>
                    <div class="form-outline mb-4">
                        <label class="form-label appLabel" for="meetingPriority">Priority: </label>
                        <select id="meetingPriority">
                            <option value="Low">LOW</option>
                            <option value="Medium">MEDIUM</option>
                            <option value="High">HIGH</option>
                        </select>
                    </div>
                    <div class="form-outline mb-4">
                        <label class="form-label appLabel" for="meetingDate">Date: </label>
                        <input type="date" id="meetingDate" class="form-control form-control-lg" required />
                    </div>
                    <div class="row">
                        <div class="form-outline mb-4 column">
                            <label class="form-label appLabel" for="startTime">Start Time: </label>
                            <input type="time" id="startTime" class="form-control form-control-lg" required />
                        </div>
                        <div class="form-outline mb-4 column">
                            <label class="form-label appLabel" for="endTime">End Time: </label>
                            <input type="time" id="endTime" class="form-control form-control-lg" required />
                        </div>
                    </div>
                    <div class="form-outline mb-4">
                        <label class="form-label appLabel">Attendees: </label>
                        <div id="multiselectUsers"></div>
                    </div>
                    <div class="form-outline mb-4">
                        <div id="messageBox" style="outline:none"></div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary appButton" id="addLocationButton2" onclick="return addNewMeeting()">Add</button>
            </div>
        </div>
    </div>
</div>


<style>
    #UsersList {
        height: 150px;
    }
</style>


@section Scripts {
    <link rel="stylesheet" href="~/lib/virtual-select-master/dist/virtual-select.min.css" />
    <script>
        $(document).ready(function () {
            getAllMeetings();
            getAllUsers();
        })

        function getAllMeetings() {
            $.ajax({
                url: "GetAllMeetings",
                type: "GET",
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function (result) {
                    var html = "";
                    for (var i = 0; i < result.data.length; i++) {
                        html += "<tr>";
                        html += "<td><p class='fw-bold mb-1'>" + result.data[i].title + "</p></td>";
                        html += "<td><p class='fw-normal mb-1'>" + result.data[i].hostUserName + "</p></td>";
                        html += "<td>" + result.data[i].description + "</td>";
                        var priorityBadge = "";
                        if (result.data[i].priority == "Low") {
                            priorityBadge = 'bg-success';
                        }
                        if (result.data[i].priority == "Medium") {
                            priorityBadge = 'bg-warning text-dark';
                        }
                        if (result.data[i].priority == "High") {
                            priorityBadge = 'bg-danger';
                        }
                        html += "<td><h5><span class='badge rounded-pill " + priorityBadge + "'>" + result.data[i].priority + "</span></h5></td>";
                        var meetingDate = result.data[i].meetingDate;
                        var meetingDateNew = moment(meetingDate).format('MMMM Do YYYY');
                        html += "<td>" + meetingDate + "</td>";
                        html += "<td>Start: " + result.data[i].startTime + "</br>End:  " + result.data[i].endTime + "</td>";
                        var attendees = result.data[i].attendees;
                        html += "<td>";
                        var attendeesStr = "";
                        //attendeesStr = '<ul><li>';

                        for (var j = 0; j < attendees.length; j++) {
                            if (attendees[j] == ',') { //add a new line for the next name
                                //attendeesStr += '</li><li">';
                                attendeesStr += "<br />";
                                continue;
                            }
                            attendeesStr += attendees[j];
                        }
                        attendeesStr += "</li></ul>"
                        attendeesStr = attendeesStr.replace(/Tentative/g, '<span class="badge bg-info text-dark" style="font-size:10px">Tentative</span>');
                        console.log(attendeesStr);
                        //html += "<button data-mdb-toggle='popover' title='Attendees' data-mdb-html='true' data-mdb-container='body' data-mdb-content='";
                        //html += attendeesStr + "'><i class='fa-solid fa-people'></i>People</button>";
                        html += attendeesStr;
                        html += "</td>";
                        if (result.data[i].active == false) {
                            html += "<td><button type='button' class='btn btn-link btn-sm btn-rounded' href='#' onclick='acceptMeeting(" + result.data[i].meetingId + ")'>Accept</button></td>";
                        }
                        else {
                            html += "<td><button type='button' class='btn btn-link btn-sm btn-rounded' href='#' onclick='deleteMeeting(" + result.data[i].meetingId + ")'><i class='fa fa-trash' aria-hidden='true' style='color:red; font-size:25px'></i></button></td>";
                        }
                        html += "<tr>";
                    }
                    $(".tbody").html(html);
                    $("[data-mdb-toggle=popover]").popover();

                },
                error: function (error) {
                    console.log(error.responseText);
                }
            });
        }
        function addNewMeeting() {
            var valid = validateDetails();
            if (valid == false) {
                return false;
            }
            var meetingTitle = document.getElementById("meetingTitle").value;
            var meetingDescription = document.getElementById("meetingDescription").value;
            var meetingDate = document.getElementById("meetingDate").value;
            var meetingPriority = document.getElementById("meetingPriority").value;
            var startTime = document.getElementById("startTime").value;
            var endTime = document.getElementById("endTime").value;
            var usersVal = document.getElementById("multiselectUsers").value;
            if (usersVal.length == 0) {
                return;
            }
            var usersListStr = "(";
            for (var i = 0; i < usersVal.length; i++) {
                usersListStr += usersVal[i];
                if (i == usersVal.length - 1) {
                    break;
                }
                usersListStr += ",";
            }
            usersListStr += ")";
            $.ajax({
                url: "AddNewMeeting",
                type: "POST",
                data: {
                    title: meetingTitle,
                    description: meetingDescription,
                    priority: meetingPriority,
                    meetingDate: meetingDate,
                    startTime: startTime,
                    endTime: endTime,
                    attendees: usersListStr
                },
                success: function (result) { //do we want to add validation for meetings to ensure there is no conflict
                    $("#meetingModal").modal("hide");
                    getAllMeetings();

                },
                error: function (error) {
                    alert(error.responseText);
                }
            })
        }

        function acceptMeeting(meetingId) {
            $.ajax({
                url: "AcceptMeeting",
                type: "POST",
                data: {
                    meetingId: meetingId
                },
                success: function (result) {
                    getAllMeetings();
                },
                error: function (error) {
                    alert(error.responseText);
                }
            })
        }

        function deleteMeeting(meetingId) {
            console.log("deleting");
            $.ajax({
                url: "DeleteMeeting",
                type: "POST",
                data: {
                    meetingId: meetingId
                },
                success: function (result) {
                    getAllMeetings();
                },
                error: function (error) {
                    alert(error.responseText);
                }
            })
        }

        function clearTextBox() {
            $("#meetingModal").modal("show");
            document.getElementById("meetingTitle").value = "";
            document.getElementById("meetingDate").value = "";
            document.getElementById("startTime").value = "";
            document.getElementById("endTime").value = "";
            document.getElementById("meetingPriority").value = "";
            document.getElementById("meetingDescription").value = "";
            $("#messageBox").html("");

            $("#startTime").css("border-color", "lightgrey");
            $("#endTime").css("border-color", "lightgrey");
        }

        function closeMeetingModal() {
            $("#meetingModal").modal("hide");
        }
        function validateDetails() {
            var meetingTitle = document.getElementById("meetingTitle").value;
            var meetingDate = document.getElementById("meetingDate").value;
            var startTime = document.getElementById("startTime").value;
            var endTime = document.getElementById("endTime").value;
            var meetingDescription = document.getElementById("meetingDescription").value;

            if (meetingTitle == "") {
                $("#meetingTitle").css("border-color", "red");
                alert("Please enter a title.");
                return false;
            }
            if (meetingDate == "") {
                $("#meetingDate").css("border-color", "red");
                alert("Please enter a date.");
                return false;
            }
            if (startTime == "") {
                $("#startTime").css("border-color", "red");
                alert("Please enter a start time.");
                return false;
            }
            if (endTime == "") {
                $("#endTime").css("border-color", "red");
                alert("Please enter an end time.");
                return false;
            }
            if (startTime > endTime) {
                $("#startTime").css("border-color", "red");
                $("#endTime").css("border-color", "red");
                alert("End time can't be before start time");
                return false;
            }
            if (meetingDescription == "") {
                $("#meetingDescription").css("border-color", "red");
                alert("Please enter a description.");
                return false;
            }
        }

        function getAllUsers() {
            var usersArray = [];
            $.ajax({
                url: "GetAllUsersAsJsonMeeting",
                type: "GET",
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function (result) {
                    console.log(result);
                    var html = "";
                    for (var i = 0; i < result.data.length; i++) {
                        if (i == 0) {
                            currentUserId = result.data[i].id;
                        }
                        var currentUser = { label: result.data[i].name, value: result.data[i].id };
                        usersArray.push(currentUser);
                    }
                    VirtualSelect.init({
                        ele: '#multiselectUsers',
                        options: usersArray,
                        multiple: true
                    });
                },
                error: function (error) {
                    console.log(error.responseText);
                }
            });
        }
    </script>
}


